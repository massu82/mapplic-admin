{
  "version": 3,
  "sources": ["../../../../mapplic/node_modules/exenv/index.js", "../../../../mapplic/node_modules/react-inlinesvg/src/index.tsx", "../../../../mapplic/node_modules/react-from-dom/src/index.ts", "../../../../mapplic/node_modules/react-from-dom/src/helpers.ts", "../../../../mapplic/node_modules/react-inlinesvg/src/helpers.ts"],
  "sourcesContent": ["/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n", "import * as React from 'react';\nimport convert from 'react-from-dom';\n\nimport { canUseDOM, isSupportedEnvironment, omit, randomString, STATUS } from './helpers';\nimport { FetchError, Props, State, Status, StorageItem } from './types';\n\nexport const cacheStore: { [key: string]: StorageItem } = Object.create(null);\n\nexport default class InlineSVG extends React.PureComponent<Props, State> {\n  private readonly hash: string;\n  private isActive = false;\n  private isInitialized = false;\n\n  public static defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.IDLE,\n    };\n\n    this.hash = props.uniqueHash || randomString(8);\n  }\n\n  public componentDidMount(): void {\n    this.isActive = true;\n\n    if (!canUseDOM() || this.isInitialized) {\n      return;\n    }\n\n    const { status } = this.state;\n    const { src } = this.props;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.IDLE) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n\n        /* istanbul ignore else */\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error: any) {\n      this.handleError(error);\n    }\n\n    this.isInitialized = true;\n  }\n\n  public componentDidUpdate(previousProps: Props, previousState: State): void {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    const { hasCache, status } = this.state;\n    const { onLoad, src } = this.props;\n\n    if (previousState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (previousProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n\n        return;\n      }\n\n      this.load();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.isActive = false;\n  }\n\n  private getElement() {\n    try {\n      const node = this.getNode() as Node;\n      const element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element,\n        status: STATUS.READY,\n      });\n    } catch (error: any) {\n      this.handleError(new Error(error.message));\n    }\n  }\n\n  private getNode() {\n    const { description, title } = this.props;\n\n    try {\n      const svgText = this.processSVG();\n      const node = convert(svgText, { nodeOnly: true });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      const svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        const originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        const descElement = document.createElementNS('http://www.w3.org/2000/svg', 'desc');\n\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (typeof title !== 'undefined') {\n        const originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        if (title) {\n          const titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n\n          titleElement.innerHTML = title;\n          svg.prepend(titleElement);\n        }\n      }\n\n      return svg;\n    } catch (error: any) {\n      return this.handleError(error);\n    }\n  }\n\n  private handleError = (error: Error | FetchError) => {\n    const { onError } = this.props;\n    const status =\n      error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState({ status }, () => {\n        /* istanbul ignore else */\n        if (typeof onError === 'function') {\n          onError(error);\n        }\n      });\n    }\n  };\n\n  private handleLoad = (content: string, hasCache = false) => {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content,\n          hasCache,\n          status: STATUS.LOADED,\n        },\n        this.getElement,\n      );\n    }\n  };\n\n  private load() {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content: '',\n          element: null,\n          hasCache: false,\n          status: STATUS.LOADING,\n        },\n        () => {\n          const { cacheRequests, src } = this.props;\n          const cache = cacheRequests && cacheStore[src];\n\n          if (cache && cache.status === STATUS.LOADED) {\n            this.handleLoad(cache.content, true);\n\n            return;\n          }\n\n          const dataURI = src.match(/^data:image\\/svg[^,]*?(;base64)?,(.*)/u);\n          let inlineSrc;\n\n          if (dataURI) {\n            inlineSrc = dataURI[1] ? window.atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n          } else if (src.includes('<svg')) {\n            inlineSrc = src;\n          }\n\n          if (inlineSrc) {\n            this.handleLoad(inlineSrc);\n\n            return;\n          }\n\n          this.request();\n        },\n      );\n    }\n  }\n\n  private processSVG() {\n    const { content } = this.state;\n    const { preProcessor } = this.props;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  }\n\n  private request = async () => {\n    const { cacheRequests, fetchOptions, src } = this.props;\n\n    if (cacheRequests) {\n      cacheStore[src] = { content: '', status: STATUS.LOADING };\n    }\n\n    try {\n      const response = await fetch(src, fetchOptions);\n      const contentType = response.headers.get('content-type');\n      const [fileType] = (contentType || '').split(/ ?; ?/);\n\n      if (response.status > 299) {\n        throw new Error('Not found');\n      }\n\n      if (!['image/svg+xml', 'text/plain'].some(d => fileType.includes(d))) {\n        throw new Error(`Content type isn't valid: ${fileType}`);\n      }\n\n      const content: string = await response.text();\n      const { src: currentSrc } = this.props;\n\n      // the current src don't match the previous one, skipping...\n      if (src !== currentSrc) {\n        if (cacheStore[src].status === STATUS.LOADING) {\n          delete cacheStore[src];\n        }\n\n        return;\n      }\n\n      this.handleLoad(content);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          cache.content = content;\n          cache.status = STATUS.LOADED;\n        }\n      }\n    } catch (error: any) {\n      this.handleError(error);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          delete cacheStore[src];\n        }\n      }\n    }\n  };\n\n  private updateSVGAttributes(node: SVGSVGElement): SVGSVGElement {\n    const { baseURL = '', uniquifyIDs } = this.props;\n    const replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    const linkAttributes = ['href', 'xlink:href'];\n    const isDataValue = (name: string, value: string) =>\n      linkAttributes.includes(name) && (value ? !value.includes('#') : false);\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    [...node.children].forEach(d => {\n      if (d.attributes && d.attributes.length) {\n        const attributes = Object.values(d.attributes).map(a => {\n          const attribute = a;\n          const match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attribute.value = a.value.replace(match[0], `url(${baseURL}${match[1]}__${this.hash})`);\n          }\n\n          return attribute;\n        });\n\n        replaceableAttributes.forEach(r => {\n          const attribute = attributes.find(a => a.name === r);\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = `${attribute.value}__${this.hash}`;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return this.updateSVGAttributes(d as SVGSVGElement);\n      }\n\n      return d;\n    });\n\n    return node;\n  }\n\n  public render(): React.ReactNode {\n    const { element, status } = this.state;\n    const { children = null, innerRef, loader = null } = this.props;\n    const elementProps = omit(\n      this.props,\n      'baseURL',\n      'cacheRequests',\n      'children',\n      'description',\n      'fetchOptions',\n      'innerRef',\n      'loader',\n      'onError',\n      'onLoad',\n      'preProcessor',\n      'src',\n      'title',\n      'uniqueHash',\n      'uniquifyIDs',\n    );\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element as React.ReactElement, { ref: innerRef, ...elementProps });\n    }\n\n    if (([STATUS.UNSUPPORTED, STATUS.FAILED] as Status[]).includes(status)) {\n      return children;\n    }\n\n    return loader;\n  }\n}\n\nexport * from './types';\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\n\nimport { noTextChildNodes, possibleStandardNames, randomString, styleToObject } from './helpers';\n\nexport interface Options {\n  actions?: Action[];\n  index?: number;\n  level?: number;\n  nodeOnly?: boolean;\n  randomKey?: boolean;\n  selector?: string;\n  type?: string;\n}\n\ninterface Attributes {\n  [index: string]: any;\n\n  key: string;\n}\n\nexport interface Action {\n  // If this returns true, the two following functions are called if they are defined\n  condition: (node: Node, key: string, level: number) => boolean;\n\n  // Use this to inject a component or remove the node\n  // It must return something that can be rendered by React\n  post?: (node: Node, key: string, level: number) => React.ReactNode;\n\n  // Use this to update or replace the node\n  // e.g. for removing or adding attributes, changing the node type\n  pre?: (node: Node, key: string, level: number) => Node;\n}\n\nfunction parseAttributes(node: Node, reactKey: string): Attributes {\n  const attributes: Attributes = {\n    key: reactKey,\n  };\n\n  /* istanbul ignore else */\n  if (node instanceof Element) {\n    const nodeClassNames = node.getAttribute('class');\n\n    if (nodeClassNames) {\n      attributes.className = nodeClassNames;\n    }\n\n    [...node.attributes].forEach(d => {\n      switch (d.name) {\n        // this is manually handled above, so break;\n        case 'class':\n          break;\n        case 'style':\n          attributes[d.name] = styleToObject(d.value);\n          break;\n        case 'allowfullscreen':\n        case 'allowpaymentrequest':\n        case 'async':\n        case 'autofocus':\n        case 'autoplay':\n        case 'checked':\n        case 'controls':\n        case 'default':\n        case 'defer':\n        case 'disabled':\n        case 'formnovalidate':\n        case 'hidden':\n        case 'ismap':\n        case 'itemscope':\n        case 'loop':\n        case 'multiple':\n        case 'muted':\n        case 'nomodule':\n        case 'novalidate':\n        case 'open':\n        case 'readonly':\n        case 'required':\n        case 'reversed':\n        case 'selected':\n        case 'typemustmatch':\n          attributes[possibleStandardNames[d.name] || d.name] = true;\n          break;\n        default:\n          attributes[possibleStandardNames[d.name] || d.name] = d.value;\n      }\n    });\n  }\n\n  return attributes;\n}\n\nfunction parseChildren(childNodeList: NodeList, level: number, options: Options) {\n  const children: React.ReactNode[] = [...childNodeList]\n    .map((node, index) =>\n      convertFromNode(node, {\n        ...options,\n        index,\n        level: level + 1,\n      }),\n    )\n    .filter(Boolean);\n\n  if (!children.length) {\n    return null;\n  }\n\n  return children;\n}\n\nfunction parseName(nodeName: string) {\n  if (/[a-z]+[A-Z]+[a-z]+/.test(nodeName)) {\n    return nodeName;\n  }\n\n  return nodeName.toLowerCase();\n}\n\nexport function convertFromNode(input: Node, options: Options = {}): React.ReactNode {\n  if (!input || !(input instanceof Node)) {\n    return null;\n  }\n\n  const { actions = [], index = 0, level = 0, randomKey } = options;\n\n  let node = input;\n  let key = `${level}-${index}`;\n  const result: React.ReactNode[] = [];\n\n  if (randomKey && level === 0) {\n    key = `${randomString()}-${key}`;\n  }\n\n  /* istanbul ignore else */\n  if (Array.isArray(actions)) {\n    actions.forEach((action: Action) => {\n      if (action.condition(node, key, level)) {\n        if (typeof action.pre === 'function') {\n          node = action.pre(node, key, level);\n\n          if (!(node instanceof Node)) {\n            node = input;\n\n            /* istanbul ignore else */\n            if (process.env.NODE_ENV !== 'production') {\n              // eslint-disable-next-line no-console\n              console.warn(\n                'The `pre` method always must return a valid DomNode (instanceof Node) - your modification will be ignored (Hint: if you want to render a React-component, use the `post` method instead)',\n              );\n            }\n          }\n        }\n\n        if (typeof action.post === 'function') {\n          result.push(action.post(node, key, level));\n        }\n      }\n    });\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  switch (node.nodeType) {\n    case 1: {\n      // regular dom-node\n      return React.createElement(\n        parseName(node.nodeName),\n        parseAttributes(node, key),\n        parseChildren(node.childNodes, level, options),\n      );\n    }\n    case 3: {\n      // textnode\n      const nodeText = node.nodeValue?.toString() || '';\n\n      /* istanbul ignore else */\n      if (/^\\s+$/.test(nodeText) && !/[\\u00A0\\u202F]/.test(nodeText)) {\n        return null;\n      }\n\n      /* istanbul ignore next */\n      if (!node.parentNode) {\n        return nodeText;\n      }\n\n      const parentNodeName = node.parentNode.nodeName.toLowerCase();\n\n      if (noTextChildNodes.includes(parentNodeName)) {\n        /* istanbul ignore else */\n        if (/\\S/.test(nodeText)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `A textNode is not allowed inside '${parentNodeName}'. Your text \"${nodeText}\" will be ignored`,\n          );\n        }\n\n        return null;\n      }\n\n      return nodeText;\n    }\n    case 8: {\n      // html-comment\n      return null;\n    }\n    /* istanbul ignore next */\n    default: {\n      return null;\n    }\n  }\n}\n\nexport function convertFromString(input: string, options: Options = {}): React.ReactNode | Node {\n  if (!input || typeof input !== 'string') {\n    return null;\n  }\n\n  const { nodeOnly = false, selector = 'body > *', type = 'text/html' } = options;\n\n  try {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(input, type as DOMParserSupportedType);\n    const node = document.querySelector(selector);\n\n    if (!(node instanceof Node)) {\n      throw new TypeError('Error parsing input');\n    }\n\n    if (nodeOnly) {\n      return node;\n    }\n\n    return convertFromNode(node, options);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  return null;\n}\n\nexport default function convert(\n  input: Node | string,\n  options: Options = {},\n): React.ReactNode | Node {\n  if (typeof input === 'string') {\n    return convertFromString(input, options);\n  }\n\n  if (input instanceof Node) {\n    return convertFromNode(input, options);\n  }\n\n  return null;\n}\n", "export const styleToObject = (input: string): Record<string, any> => {\n  const attributes = input.split(/ ?; ?/);\n\n  return attributes.reduce((acc: Record<string, any>, d: string) => {\n    const [key, value] = d.split(/ ?: ?/);\n\n    if (key && value) {\n      acc[key.replace(/-(\\w)/g, (_$0, $1) => $1.toUpperCase())] = Number.isNaN(Number(value))\n        ? value\n        : Number(value);\n    }\n\n    return acc;\n  }, {});\n};\n\n/* istanbul ignore next */\nexport function randomString(length = 6): string {\n  const characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let result = '';\n\n  for (let index = length; index > 0; --index) {\n    result += characters[Math.round(Math.random() * (characters.length - 1))];\n  }\n\n  return result;\n}\n\nexport const noTextChildNodes = [\n  'br',\n  'col',\n  'colgroup',\n  'dl',\n  'hr',\n  'iframe',\n  'img',\n  'input',\n  'link',\n  'menuitem',\n  'meta',\n  'ol',\n  'param',\n  'select',\n  'table',\n  'tbody',\n  'tfoot',\n  'thead',\n  'tr',\n  'ul',\n  'wbr',\n];\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Taken from https://raw.githubusercontent.com/facebook/react/baff5cc2f69d30589a5dc65b089e47765437294b/packages/react-dom/src/shared/possibleStandardNames.js\n// tslint:disable:object-literal-sort-keys\nexport const possibleStandardNames: Record<string, any> = {\n  // HTML\n  'accept-charset': 'acceptCharset',\n  acceptcharset: 'acceptCharset',\n  accesskey: 'accessKey',\n  allowfullscreen: 'allowFullScreen',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  charset: 'charSet',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  colspan: 'colSpan',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controlslist: 'controlsList',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  datetime: 'dateTime',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  enctype: 'encType',\n  for: 'htmlFor',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  maxlength: 'maxLength',\n  mediagroup: 'mediaGroup',\n  minlength: 'minLength',\n  nomodule: 'noModule',\n  novalidate: 'noValidate',\n  playsinline: 'playsInline',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rowspan: 'rowSpan',\n  spellcheck: 'spellCheck',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  tabindex: 'tabIndex',\n  typemustmatch: 'typeMustMatch',\n  usemap: 'useMap',\n\n  // SVG\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  diffuseconstant: 'diffuseConstant',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  edgemode: 'edgeMode',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  numoctaves: 'numOctaves',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  ychannelselector: 'yChannelSelector',\n  zoomandpan: 'zoomAndPan',\n\n  // event handlers\n  onblur: 'onBlur',\n  onchange: 'onChange',\n  onclick: 'onClick',\n  oncontextmenu: 'onContextMenu',\n  ondoubleclick: 'onDoubleClick',\n  ondrag: 'onDrag',\n  ondragend: 'onDragEnd',\n  ondragenter: 'onDragEnter',\n  ondragexit: 'onDragExit',\n  ondragleave: 'onDragLeave',\n  ondragover: 'onDragOver',\n  ondragstart: 'onDragStart',\n  ondrop: 'onDrop',\n  onerror: 'onError',\n  onfocus: 'onFocus',\n  oninput: 'onInput',\n  oninvalid: 'onInvalid',\n  onkeydown: 'onKeyDown',\n  onkeypress: 'onKeyPress',\n  onkeyup: 'onKeyUp',\n  onload: 'onLoad',\n  onmousedown: 'onMouseDown',\n  onmouseenter: 'onMouseEnter',\n  onmouseleave: 'onMouseLeave',\n  onmousemove: 'onMouseMove',\n  onmouseout: 'onMouseOut',\n  onmouseover: 'onMouseOver',\n  onmouseup: 'onMouseUp',\n  onscroll: 'onScroll',\n  onsubmit: 'onSubmit',\n  ontouchcancel: 'onTouchCancel',\n  ontouchend: 'onTouchEnd',\n  ontouchmove: 'onTouchMove',\n  ontouchstart: 'onTouchStart',\n  onwheel: 'onWheel',\n};\n", "import { canUseDOM as canUseDOMFlag } from 'exenv';\n\nimport type { PlainObject } from './types';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  FAILED: 'failed',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported',\n} as const;\n\nexport function canUseDOM(): boolean {\n  return canUseDOMFlag;\n}\n\nexport function isSupportedEnvironment(): boolean {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\n\nexport function supportsInlineSVG(): boolean {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n\n  const div = document.createElement('div');\n\n  div.innerHTML = '<svg />';\n  const svg = div.firstChild as SVGSVGElement;\n\n  return !!svg && svg.namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nfunction randomCharacter(character: string) {\n  return character[Math.floor(Math.random() * character.length)];\n}\n\nexport function randomString(length: number): string {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '1234567890';\n  const charset = `${letters}${letters.toUpperCase()}${numbers}`;\n\n  let R = '';\n\n  for (let index = 0; index < length; index++) {\n    R += randomCharacter(charset);\n  }\n\n  return R;\n}\n\n/**\n *  Remove properties from an object\n */\nexport function omit<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key as unknown as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output as Omit<T, K>;\n}\n"],
  "mappings": "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",
  "names": ["canUseDOM", "React", "__read", "canUseDOMFlag", "randomString", "InlineSVG", "__read", "randomString", "__spreadArray", "__assign"]
}
